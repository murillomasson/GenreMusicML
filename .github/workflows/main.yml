name: Terraform CI/CD

on:
  pull_request:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: List files
        run: ls -la

      - name: List terraform directory
        run: ls -la ./terraform

      - name: Verify requirements file exists
        run: |
          if [ ! -f requirements.txt ]; then
            echo "requirements.txt not found!"
            exit 1
          fi

      - name: Clear Python cache
        run: |
          sudo rm -rf /usr/local/bin/python*
          sudo apt-get remove python3*

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Remove previous cache (if any)
        run: |
          rm -rf ~/.cache/pip

      - name: Install dependencies
        run: pip install -r requirements.txt  

      - name: Verify Terraform configuration exists
        run: |
          if [ ! -f ./terraform/main.tf ]; then
            echo "Terraform configuration not found!"
            exit 1
          fi
        working-directory: ./terraform

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.0

      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform 

      - name: Terraform Plan
        run: terraform plan
        working-directory: ./terraform 

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: ./terraform 
        env:
          TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}
          TF_VAR_db_username: ${{ secrets.DB_USERNAME }}
          TF_VAR_spotify_client_id: ${{ secrets.SPOTIFY_CLIENT_ID }}
          TF_VAR_spotify_client_secret: ${{ secrets.SPOTIFY_CLIENT_SECRET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

      - name: Get EC2 Public IP
        id: get_ip
        run: echo "EC2_PUBLIC_IP=$(terraform output -raw ec2_public_ip)" >> $GITHUB_ENV
        working-directory: ./terraform

      - name: Add SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ env.EC2_PUBLIC_IP }} >> ~/.ssh/known_hosts
